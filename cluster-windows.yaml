version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    ports:
     - 12181:12181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    # volumes:
    #   - "E:/tmp/vol1:/var/lib/zookeeper/data"
    #   - "E:/tmp/vol2:/var/lib/zookeeper/log"
  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    ports:
     - 22181:22181
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    ports:
     - 32181:32181
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"

  kafka-1:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 19092:9092
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - BROKER_ID=1
      - ZOOKEEPER_CONNECT=zookeeper-1:12181,zookeeper-2:22181,zookeeper-3:32181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:19092
      - KAFKA_DEFAULT_REPLICATION_FACTOR=${REPLICATION_FACTOR}
  kafka-2:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 29092:9092
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - BROKER_ID=2
      - ZOOKEEPER_CONNECT=zookeeper-1:12181,zookeeper-2:22181,zookeeper-3:32181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:29092
      - KAFKA_DEFAULT_REPLICATION_FACTOR=${REPLICATION_FACTOR}
  kafka-3:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 39092:9092
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - BROKER_ID=3
      - ZOOKEEPER_CONNECT=zookeeper-1:12181,zookeeper-2:22181,zookeeper-3:32181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:39092
      - KAFKA_DEFAULT_REPLICATION_FACTOR=${REPLICATION_FACTOR}

  mysql:
    image: debezium/example-mysql:${DEBEZIUM_VERSION}
    ports:
     - 3306:3306
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
     - 8181:8181
     - 8081:8081
    environment:
     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper-1:12181,zookeeper-2:22181,zookeeper-3:32181
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081

  connect:
    build:
      context: ./kafka-connect
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
     - 8083:8083
    depends_on:
     - kafka-1
     - kafka-2
     - kafka-3
     - mysql
     - schema-registry
    environment:
     - BOOTSTRAP_SERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
     - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
     - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
     - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - node.name=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
  #   container_name: es01
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es02,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - 9200:9200
  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
  #   container_name: es02
  #   environment:
  #     - node.name=es02
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
  #   container_name: es03
  #   environment:
  #     - node.name=es03
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es02
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1